{"version":3,"sources":["logo.svg","topic.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","topic","props","state","className","Card","style","backgroundColor","Body","Title","Text","color","fontSize","textAlign","position","left","size","href","target","rel","Component","App","console","log","basename","process","src","logo","alt","exact","path","render","to","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,iPCatBC,G,kBAGnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,GAFI,E,sEAIT,OAEZ,6BAYE,yBAAMC,UAAU,aAClB,yBAAKA,UAAU,OAGV,yBAAKA,UAAU,YAmBZ,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,gBAAgB,YAEpC,kBAACF,EAAA,EAAKG,KAAN,KAEE,kBAACH,EAAA,EAAKI,MAAN,6BAEA,kBAACJ,EAAA,EAAKK,KAAN,8CAQC,6BACG,6BAEA,uBAAGJ,MAAO,CAACK,MAAO,MAAMC,SAAS,KAAjC,+CAUR,uBAAGN,MAAO,CAACO,UAAU,UAAWC,SAAS,WAAWC,KAAK,KAEzD,0CAFA,qUAGA,6BACQ,6BAlDH,IAkDU,6BACP,6BAnDH,IAmDU,6BACP,6BAEA,uBAAGT,MAAO,CAACU,KAAK,KAAK,sCAArB,uDACE,uBAAGV,MAAO,CAACU,KAAK,KAAhB,iDAEV,2BAAI,gCAAQ,mCAAR,uCAEQ,uBAAGV,MAAO,CAACK,MAAO,MAAMC,SAAS,KAAjC,qBAOJ,yBAAKR,UAAU,YACf,6BACA,6BAFA,IAEO,6BAGf,uBAAGE,MAAO,CAACK,MAAO,OAAOC,SAAS,GAAME,SAAU,WAAWC,KAAM,KAAnE,yBAEQ,6BACA,6BACA,wBAAIT,MAAO,CAACO,UAAU,SAClB,iCAAM,uBAAGI,KAAK,8CAA8CC,OAAO,SAASC,IAAI,uBAA1E,2CAAN,KACA,iCAAM,uBAAGF,KAAK,8CAA8CC,OAAO,SAASC,IAAI,uBAA1E,6CAAN,KACA,iCAAM,uBAAGF,KAAK,8CAA8CC,OAAO,SAASC,IAAI,uBAA1E,4CAAN,KACA,iCAAM,uBAAGF,KAAK,8CAA8CC,OAAO,SAASC,IAAI,uBAA1E,sDAAN,MAKJ,6BAlBA,QAkBW,6BAGT,uBAAGb,MAAO,CAACK,MAAO,OAAOC,SAAS,GAAME,SAAU,WAAWC,KAAM,KAAnE,0BAEF,6BACA,6BAEA,wBAAIT,MAAO,CAACO,UAAU,SAO9B,+GAGC,6BACO,6BArCA,IAqCO,6BACP,qC,GAjI2BO,c,eCiBpBC,E,iLApBX,OADAC,QAAQC,IAAI,wBAGV,kBAAC,IAAD,CAAQC,SAAUC,gBAChB,yBAAKrB,UAAU,OACf,4BAAQA,UAAU,cAChB,yBAAKsB,IAAKC,IAAMvB,UAAU,WAAWwB,IAAI,SACzC,wBAAIxB,UAAU,aAAd,6BAEA,kBAAC,IAAD,KACM,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAM,IAAIC,OAAQ,kBAC7B,kBAAC,IAAD,CAAUC,GAAG,cAEd,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASG,UAAWhC,W,GAfrCmB,aCKEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASR,OAAO,kBAAC,EAAD,MAASS,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.13ad83e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react';\n\nimport {Card, Button} from 'react-bootstrap'\n\n// import { Panel } from 'bootstrap'\n// import Panel from 'react-bootstrap/lib/Panel'\n// import Button from 'react-bootstrap/lib/Button'\n// import CustomerDetails from './CustomerDetails'\nimport axios from 'axios'\n\n\n// var topic = function (){\n//  return(\nexport default class topic extends Component {\n \n   \n  constructor(props) {\n    super(props);\n    this.state = {}\n  } \n  render() {return(\n\n<div>\n{/* <Card  >\n        <Card.Heading>\n          <Card.Title componentClass=\"h3\">Kevin Ching</Card.Title>\n          <Card.Title componentClass=\"h3\">Data scientist of United Health</Card.Title>\n        </Card.Heading>\n        <Card.Body></Card.Body>\n</Card> */}\n\n\n\n  \n  <div  className=\"container\">\n<div className=\"row\">\n\n    \n     <div className=\"col-md-6\">\n\n\n     {/* <Card >\n  <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n  <Card.Body>\n    <Card.Title><p style={{auto:\"center\",color:\"red\",fontSize:40,}}> Some thougts based on quantum mechnaics and relativity </p>\n</Card.Title>\n    <Card.Text>\n    <p style={{textAlign:\"justify\", position:\"absolute\",left:10}}>\n\n<span>&nbsp;&nbsp;</span>The last two weeks we covered some intriguing ideas related to quantum interference and the delayed choice quantum eraser in quantum mechanics, as well as the concept of time, especially, the extended simultaneity concept in relativity. This week, we will present some thoughts on these topics in a theological viewpoint!</p>\n\n    </Card.Text>\n    <Button variant=\"primary\">Go somewhere</Button>\n  </Card.Body>\n</Card> */}\n\n\n        <Card style={{backgroundColor:\"#7ea8cc\"}}>\n  {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n  <Card.Body>\n    {/* <Card.Title><p style={{auto:\"center\",color:\"blue\",fontSize:25,}}> Speaker: Kevin Ching</p> */}\n    <Card.Title>Speaker: Kevin Ching\n</Card.Title>\n    <Card.Text>\n    {/* <p style={{auto:\"center\",color:\"green\",fontSize:20,}}>--- data scientist at United Health </p> */}\n     --- data scientist at United Health \n    </Card.Text>\n    {/* <Button variant=\"primary\">Go somewhere</Button> */}\n  </Card.Body>\n</Card>\n\n     <br />\n        <br />\n\n        <p style={{color: \"red\",fontSize:40}}>What is the nature of quantum interference?</p>\n        \n\n{/* <p style={{auto:\"center\",color:\"blue\",fontSize:25,}}> Speaker: Kevin Ching </p>\n<p style={{auto:\"center\",color:\"green\",fontSize:20,}}>--- data scientist at United Health </p>\n\n */}\n\n  \n{/* <p style={{textAlign:\"justify\",width: 1200, wordWrap: \"break-word\", display: \"block\",marginLeft: \"auto\", marginRight: \"auto\"}}> */}\n<p style={{textAlign:\"justify\", position:\"absolute\",left:10}}>\n\n<span>&nbsp;&nbsp;</span>The last two weeks we covered some intriguing ideas related to quantum interference and the delayed choice quantum eraser in quantum mechanics, as well as the concept of time, especially, the extended simultaneity concept in relativity. This week, we will present some thoughts on these topics in a theological viewpoint!</p>\n<br />\n        <br /> <br />\n        <br /> <br />\n        <br /> \n\n        <p style={{size:30}}><b>Address</b>: Room D504, Bethlehem Baptist Church North Campus,</p>\n          <p style={{size:30}}>5151 Program Ave\nMounds View, Minnesota 55112</p>\n<p ><center><b>Time</b>:  7 pm to 8 pm, Nov 20(Wednesday)</center></p>\n  \n            <p style={{color: \"red\",fontSize:40}}>All are Welcome!</p>\n</div>\n\n{/* <div className=\"col-md-1\">\n\n     </div> */}\n\n        <div className=\"col-md-6\">\n        <br />\n        <br /> <br />\n      \n\n<p style={{color: \"blue\",fontSize:20,   position: \"absolute\",left: 30}}>Some videos to watch:</p>\n   \n        <br />\n        <br />\n        <ol style={{textAlign:\"left\"}}> \n            <li>  <a href=\"https://www.youtube.com/watch?v=U7Z_TIw9InA\" target=\"_blank\" rel=\"noopener noreferrer\">Delayed Choice Quantum Eraser Explained</a> </li>\n            <li>  <a href=\"https://www.youtube.com/watch?v=p-MNSLsjjdo\" target=\"_blank\" rel=\"noopener noreferrer\">The Quantum Experiment that Broke Reality</a> </li>\n            <li>  <a href=\"https://www.youtube.com/watch?v=8ORLN_KwAgs\" target=\"_blank\" rel=\"noopener noreferrer\">How the Quantum Eraser Rewrites the Past</a> </li>\n            <li>  <a href=\"https://www.youtube.com/watch?v=ZuvK-od647c\" target=\"_blank\" rel=\"noopener noreferrer\">Quantum Entanglement & Spooky Action at a Distance</a> </li>  \n        </ol>\n        \n      \n\n        <br />     <br />\n        \n\n          <p style={{color: \"blue\",fontSize:20,   position: \"absolute\",left: 30}}>Questions to consider:</p>\n  \n        <br />\n        <br />\n\n        <ol style={{textAlign:\"left\"}}> \n{/* <li> The results of these experiments are very unexpected and unintuitive. How can we concisely articulate the nature of this mystery to novices?</li>\n\n<li> Scientific theory is all about repeatable experiments which either buttress or debunk proposed hypotheses. In contrast philosophy is often said to take over where science ends. In what sense does it seem as if quantum mechanics is now crossing over into the realm of philosophy?</li> */}\n\n\n\n<li>How these scentific facts \"points to\" the existence of God describd in bible? </li>\n\n</ol>\n <br />\n        <br /> <br />\n        <br />\n\n        </div>\n        </div>\n\n</div>\n</div>\n       \n  )\n       \n    }\n\n    // export default topic; \n\n         \n    }","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport topic from './topic'\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    console.log(\"Host URL\"+process.env.PUBLIC_URL);\n    return (\n\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Science-Faith discussion</h1>\n        </header>\n          <Switch>\n                <Route exact path= \"/\" render={() => (\n                  <Redirect to=\"/topic\"/>\n                )}/>\n                 <Route exact path='/topic' component={topic} />\n          </Switch>\n      </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}